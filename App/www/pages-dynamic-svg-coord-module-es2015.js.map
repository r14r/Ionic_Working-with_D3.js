{"version":3,"sources":["./src/app/pages/dynamic-svg-coord/page.html","./src/app/pages/dynamic-svg-coord/module.ts","./src/app/pages/dynamic-svg-coord/page.scss","./src/app/pages/dynamic-svg-coord/page.ts"],"names":[],"mappings":"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","file":"pages-dynamic-svg-coord-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n\\t<common-header>D3.js with Ionic</common-header>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\t<h1 class=\\\"ion-no-margin\\\">Dynamic SVG Coordinate Space</h1>\\n\\n\\t<div class=\\\"ion-padding-horizontal ion-padding-bottom\\\">\\n\\t\\t<p padding-top>How to make the SVG Coordinate Space scale up and/or down to fit the data?</p>\\n\\t\\t<p padding-bottom>Basically we have to change the width and height value of the SVG container to fit the max X\\n\\t\\t\\tand the max Y where the shapes will be drawn.: </p>\\n\\n\\t\\t<p padding-top>What are max.x and max.y ?</p>\\n\\t\\t<p padding-bottom>It comes from the getMaxSVG method that does what follows: </p>\\n\\n\\t\\t<p padding-top>Result:</p>\\n\\t\\t<div id=\\\"dynamicSvg\\\"></div>\\n\\t</div>\\n\\n</ion-content>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { DynamicSvgCoordPage } from './page';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule,\n\t\tRouterModule.forChild([{ path: '', component: DynamicSvgCoordPage }]),\n\t\tComponentsModule\n\t],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\tdeclarations: [DynamicSvgCoordPage]\n})\nexport class DynamicSvgCoordPageModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2R5bmFtaWMtc3ZnLWNvb3JkL3BhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport * as d3 from 'd3-selection';\nimport { Toolbox } from 'src/app/shared/helpers/toolbox.service';\n\n@Component({\n\tselector: 'page-dynamic-svg-coord',\n\ttemplateUrl: 'page.html',\n\tstyleUrls: ['page.scss']\n})\nexport class DynamicSvgCoordPage implements OnInit {\n\tpublic ID = 'DynamicSvgCoordPage';\n\n\tprivate toolbox = new Toolbox(this.ID);\n\n\tngOnInit() {\n\t\tthis.createDynamicSvg();\n\t}\n\n\tcreateDynamicSvg(): void {\n\t\tconst jsonRectangles = [\n\t\t\t{ x: 10, y: 10, height: 20, width: 20, color: 'green' },\n\t\t\t{ x: 160, y: 40, height: 20, width: 20, color: 'purple' },\n\t\t\t{ x: 70, y: 70, height: 20, width: 20, color: 'red' }];\n\n\t\t// Loop through the array of JSON objects to get the max x-coordinate and the max y-coordinate\n\t\tconst max = this.getMaxSVG(jsonRectangles,\n\t\t\t'x',\n\t\t\t'y',\n\t\t\t'width',\n\t\t\t'height');\n\n\t\tconst svgContainer = d3.select('#dynamicSvg').append('svg')\n\t\t\t// dynamically change the width and height attributes of the SVG Container/Viewport according to the data\n\t\t\t.attr('width', max.x)\n\t\t\t.attr('height', max.y)\n\t\t\t.style('border', '1px solid black');\n\n\t\tconst rectangles = svgContainer.selectAll('rect')\n\t\t\t.data(jsonRectangles)\n\t\t\t.enter()\n\t\t\t.append('rect');\n\n\t\trectangles\n\t\t\t.attr('x', (d) => d.x)\n\t\t\t.attr('y', (d) => d.y)\n\t\t\t.attr('width', (d) => d.width)\n\t\t\t.attr('height', (d) => d.height)\n\t\t\t.style('fill', (d) => d.color);\n\n\t}\n\n    /**\n     * The max x-coordinate and max y-coordinate will be the bottom right hand point of the rectangle\n     * @param data\n     * @param {string} xKey the x key property to loop through the data\n     * @param {string} yKey the y key property to loop through the data\n     * @param {string} wKey the width key property to loop through the data\n     * @param {string} hKey the height key property to loop through the data\n     * @returns {{x: number, y: number}}\n     */\n\tgetMaxSVG(data: any, xKey: string, yKey: string, wKey: string, hKey: string): { x: number, y: number } {\n\t\tconst max = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tdata.forEach((item) => {\n\t\t\tmax.x = Math.max(item[xKey] + item[wKey], max.x);\n\t\t\tmax.y = Math.max(item[yKey] + item[hKey], max.y);\n\t\t});\n\t\treturn max;\n\t}\n\n}\n"],"sourceRoot":""}