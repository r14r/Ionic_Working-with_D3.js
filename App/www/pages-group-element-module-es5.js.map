{"version":3,"sources":["./src/app/pages/group-element/page.html","./src/app/pages/group-element/module.ts","./src/app/pages/group-element/page.scss","./src/app/pages/group-element/page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,s8K;;;;;;;;;;;;;;;;;;;;;;;ACAiE;AAClB;AACF;AACA;AACE;AAEL;AACqC;AAa/E;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAXlC,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sDAAgB,EAAE,CAAC,CAAC;gBAClE,4FAAgB;aAChB;YACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;YACjC,YAAY,EAAE,CAAC,sDAAgB,CAAC;SAChC,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;;;;;ACpBnC,+DAA+D,+I;;;;;;;;;;;;;;;;;;ACArB;AACuB;AAOjE;IALA;QAMQ,OAAE,GAAG,kBAAkB,CAAC;QAEvB,YAAO,GAAG,IAAI,8EAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAJY,gBAAgB;QAL5B,+DAAS,CAAC;YACV,QAAQ,EAAE,oBAAoB;YAC9B,yIAAwB;;SAExB,CAAC;OACW,gBAAgB,CAI5B;IAAD,uBAAC;CAAA;AAJ4B","file":"pages-group-element-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n\\t<common-header>D3.js with Ionic</common-header>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\t<h1 class=\\\"ion-no-margin margin-bottom\\\">Group Element (SVG)</h1>\\n\\n\\t<h2 class=\\\"ion-margin-bottom\\\">Grouping SVG Elements Together</h2>\\n\\t<div class=\\\"ion-padding-horizontal ion-padding-bottom\\\">\\n\\t\\t<h3 class=\\\"ion-no-padding\\\">4 SVG basic shape elements</h3>\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t</svg>\\n\\n\\t\\t<h3 class=\\\"ion-no-padding ion-padding-top\\\">The same basic shape elements with groups</h3>\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g>\\n\\t\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g>\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\t</div>\\n\\n\\t<h2 class=\\\"ion-margin-bottom\\\">Transforming SVG Elements Together</h2>\\n\\n\\t<div class=\\\"ion-padding-horizontal ion-padding-bottom\\\">\\n\\t\\t<p>Change attributes, here: adding 80 units to the cx attribute of each circles:</p>\\n\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g>\\n\\t\\t\\t\\t<circle cx=\\\"100\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"150\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g>\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\t</div>\\n\\n\\t<h2 class=\\\"ion-margin-bottom\\\">SVG Transform Attribute</h2>\\n\\n\\t<div class=\\\"ion-padding-horizontal ion-padding-bottom\\\">\\n\\t\\t<h3 class=\\\"ion-no-padding\\\">Translate</h3>\\n\\t\\t<p class=\\\"ion-no-margin margin-bottom\\\">This transform definition specifies a translation by x and y. This is\\n\\t\\t\\tequivalent to\\n\\t\\t\\tmatrix(1 0 0 1 x y). If y is not provided, it is assumed to be zero.</p>\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g transform=\\\"translate(80,0)\\\">\\n\\t\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g>\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\n\\t\\t<h3 class=\\\"ion-no-padding ion-padding-top\\\">Scale</h3>\\n\\t\\t<p class=\\\"ion-no-margin margin-bottom\\\">This transform definition specifies a scale operation by x and y.\\n\\t\\t\\tThis is equivalent to matrix(x 0 0 y 0 0). If y is not provided, it is assumed to be equal to x.</p>\\n\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g transform=\\\"scale(2, 1)\\\">\\n\\t\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g transform=\\\"scale(0.5)\\\">\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\n\\t\\t<h3 class=\\\"ion-no-padding ion-padding-top\\\">Skew : skewX(a), skewY(a)</h3>\\n\\t\\t<p class=\\\"ion-no-margin margin-bottom\\\">This transform definition specifies a skew transformation along the x or\\n\\t\\t\\ty axis by a degrees.</p>\\n\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g transform=\\\"skewX(20)\\\">\\n\\t\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g transform=\\\"skewY(8)\\\">\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\n\\t\\t<h3 class=\\\"ion-no-padding ion-padding-top\\\">Matrix</h3>\\n\\t\\t<p class=\\\"ion-no-margin margin-bottom\\\">This transform definition specifies a transformation in the form of a\\n\\t\\t\\ttransformation\\n\\t\\t\\tmatrix of six values.</p>\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g transform=\\\"matrix(1,2,3,4,5,6)\\\">\\n\\t\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g>\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\n\\n\\t\\t<h3 class=\\\"ion-no-padding ion-padding-top\\\">Rotate</h3>\\n\\t\\t<p class=\\\"ion-no-margin\\\">This transform definition specifies a rotation by a degrees about a given point. If\\n\\t\\t\\toptional parameters x and y are not supplied, the rotate is about the origin of the current user\\n\\t\\t\\tcoordinate\\n\\t\\t\\tsystem</p>\\n\\t\\t<p>If optional parameters x and y are supplied, the rotate is about the point (x, y)</p>\\n\\n\\t\\t<svg width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<g transform=\\\"rotate(45, 50, 50)\\\">\\n\\t\\t\\t\\t<circle cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"20\\\" fill=\\\"green\\\" />\\n\\t\\t\\t\\t<circle cx=\\\"70\\\" cy=\\\"70\\\" r=\\\"20\\\" fill=\\\"purple\\\" />\\n\\t\\t\\t</g>\\n\\t\\t\\t<g transform=\\\"rotate(-5)\\\">\\n\\t\\t\\t\\t<rect x=\\\"110\\\" y=\\\"110\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"blue\\\" />\\n\\t\\t\\t\\t<rect x=\\\"160\\\" y=\\\"160\\\" height=\\\"30\\\" width=\\\"30\\\" fill=\\\"red\\\" />\\n\\t\\t\\t</g>\\n\\t\\t</svg>\\n\\t</div>\\n\\n</ion-content>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { GroupElementPage } from './page';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule,\n\t\tRouterModule.forChild([{ path: '', component: GroupElementPage }]),\n\t\tComponentsModule\n\t],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\tdeclarations: [GroupElementPage]\n})\nexport class GroupElementPageModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dyb3VwLWVsZW1lbnQvcGFnZS5zY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { Toolbox } from 'src/app/shared/helpers/toolbox.service';\n\n@Component({\n\tselector: 'page-group-element',\n\ttemplateUrl: 'page.html',\n\tstyleUrls: ['page.scss']\n})\nexport class GroupElementPage {\n\tpublic ID = 'GroupElementPage';\n\n\tprivate toolbox = new Toolbox(this.ID);\n}\n"],"sourceRoot":""}