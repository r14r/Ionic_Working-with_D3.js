{"version":3,"sources":["./src/app/pages/paths-svg/page.html","./src/app/pages/paths-svg/module.ts","./src/app/pages/paths-svg/page.scss","./src/app/pages/paths-svg/page.ts"],"names":[],"mappings":"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","file":"pages-paths-svg-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n\\t<common-header>D3.js with Ionic</common-header>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\t<h1 class=\\\"ion-no-margin\\\">SVG Paths</h1>\\n\\n\\t<div class=\\\"ion-padding-horizontal\\\">\\n\\t\\t<p class=\\\"ion-padding-vertical\\\">The \\\"curve\\\" method sets the curve factory and returns the line generator.\\n\\t\\t\\tInstead of just providing the data to the svg container, we provide the generated data by the chosen\\n\\t\\t\\tgenerator.</p>\\n\\t</div>\\n\\n\\t<h2>Allowed factories</h2>\\n\\t<div class=\\\"ion-padding-horizontal\\\">\\n\\t\\t<ul>\\n\\t\\t\\t<li>d3Shape.curveBasis</li>\\n\\t\\t\\t<li>d3Shape.curveBasisClosed</li>\\n\\t\\t\\t<li>d3Shape.curveBasisOpen</li>\\n\\t\\t\\t<li>d3Shape.curveBundle</li>\\n\\t\\t\\t<li>d3Shape.curveCardinal</li>\\n\\t\\t\\t<li>d3Shape.curveCardinalClosed</li>\\n\\t\\t\\t<li>d3Shape.curveCardinalOpen</li>\\n\\t\\t\\t<li>d3Shape.curveCatmullRom</li>\\n\\t\\t\\t<li>d3Shape.curveCatmullRomClosed</li>\\n\\t\\t\\t<li>d3Shape.curveCatmullRomOpen</li>\\n\\t\\t\\t<li>d3Shape.curveLinear</li>\\n\\t\\t\\t<li>d3Shape.curveLinearClosed</li>\\n\\t\\t\\t<li>d3Shape.curveMonotoneX</li>\\n\\t\\t\\t<li>d3Shape.curveMonotoneY</li>\\n\\t\\t\\t<li>d3Shape.curveNatural</li>\\n\\t\\t\\t<li>d3Shape.curveStep</li>\\n\\t\\t\\t<li>d3Shape.curveStepAfter</li>\\n\\t\\t\\t<li>d3Shape.curveStepBefore</li>\\n\\t\\t</ul>\\n\\t</div>\\n\\n\\n\\t<h2>Examples</h2>\\n\\t<div class=\\\"ion-padding-horizontal ion-padding-bottom\\\">\\n\\t\\t<ion-item class=\\\"no-lines no-padding\\\">\\n\\n\\t\\t\\t<ion-label>Interpolation</ion-label>\\n\\n\\t\\t\\t<ion-select [(ngModel)]=\\\"interpolationSelected\\\" (ionChange)=\\\"createSvgPathsLines($event)\\\"\\n\\t\\t\\t\\tinterface=\\\"popover\\\">\\n\\t\\t\\t\\t<ion-option *ngFor=\\\"let interpolation of interpolationsSelectList\\\">{{interpolation}}</ion-option>\\n\\t\\t\\t</ion-select>\\n\\n\\t\\t</ion-item>\\n\\n\\t\\t<div id=\\\"paths\\\"></div>\\n\\t</div>\\n\\n\\n\\t<footer-links color=\\\"dark\\\" class=\\\"ion-no-margin\\\" tutorialUrl=\\\"https://www.dashingd3js.com/svg-paths-and-d3js\\\">\\n\\t</footer-links>\\n\\n</ion-content>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { PathsSvgPage } from './page';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule,\n\t\tRouterModule.forChild([{ path: '', component: PathsSvgPage }]),\n\t\tComponentsModule\n\t],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\tdeclarations: [PathsSvgPage]\n})\nexport class PathsSvgPageModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGhzLXN2Zy9wYWdlLnNjc3MifQ== */\"","import { Component, AfterViewInit } from '@angular/core';\n\nimport * as d3 from 'd3-selection';\nimport * as d3Shape from 'd3-shape';\nimport { Toolbox } from 'src/app/shared/helpers/toolbox.service';\n\n@Component({\n\tselector: 'page-paths-svg',\n\ttemplateUrl: 'page.html',\n\tstyleUrls: ['page.scss']\n})\n\nexport class PathsSvgPage implements AfterViewInit {\n\tpublic ID = 'PathsSvgPage';\n\tprivate toolbox = new Toolbox(this.ID);\n\n\tinterpolations: Array<{ name: string, value: d3Shape.CurveFactory | d3Shape.CurveBundleFactory }> = [\n\t\t{ name: 'basis', value: d3Shape.curveBasis },\n\t\t{ name: 'basisClosed', value: d3Shape.curveBasisClosed },\n\t\t{ name: 'basisOpen', value: d3Shape.curveBasisOpen },\n\t\t{ name: 'bundle', value: d3Shape.curveBundle },\n\t\t{ name: 'cardinal', value: d3Shape.curveCardinal },\n\t\t{ name: 'cardinalClosed', value: d3Shape.curveCardinalClosed },\n\t\t{ name: 'cardinalOpen', value: d3Shape.curveCardinalOpen },\n\t\t{ name: 'catmullRom', value: d3Shape.curveCatmullRom },\n\t\t{ name: 'catmullRomClosed', value: d3Shape.curveCatmullRomClosed },\n\t\t{ name: 'catmullRomOpen', value: d3Shape.curveCatmullRomOpen },\n\t\t{ name: 'linear', value: d3Shape.curveLinear },\n\t\t{ name: 'linearClosed', value: d3Shape.curveLinearClosed },\n\t\t{ name: 'monotoneX', value: d3Shape.curveMonotoneX },\n\t\t{ name: 'monotoneY', value: d3Shape.curveMonotoneY },\n\t\t{ name: 'natural', value: d3Shape.curveNatural },\n\t\t{ name: 'step', value: d3Shape.curveStep },\n\t\t{ name: 'stepAfter', value: d3Shape.curveStepAfter },\n\t\t{ name: 'stepBefore', value: d3Shape.curveStepBefore }\n\t];\n\n\tinterpolationSelected = 'linear';\n\n\tinterpolationsSelectList: string[] = this.interpolations.map((interpolation) => interpolation.name);\n\n\tngAfterViewInit() {\n\t\tthis.createSvgPathsLines();\n\t}\n\n\tcreateSvgPathsLines(): void {\n\n\t\t// Data set\n\t\tconst lineData = [\n\t\t\t{ x: 1, y: 90 }, { x: 20, y: 20 },\n\t\t\t{ x: 40, y: 50 }, { x: 60, y: 100 },\n\t\t\t{ x: 80, y: 10 }, { x: 100, y: 40 },\n\t\t\t{ x: 120, y: 30 }, { x: 140, y: 80 },\n\t\t\t{ x: 160, y: 5 }, { x: 180, y: 60 },\n\t\t\t{ x: 200, y: 5 }, { x: 220, y: 60 },\n\t\t\t{ x: 240, y: 90 }, { x: 260, y: 120 }];\n\n\t\t// Clear the previous svg drawn\n\t\td3.select('#paths svg').remove();\n\n\t\tconst svgContainer = d3.select('#paths').append('svg')\n\t\t\t.attr('width', 300)\n\t\t\t.attr('height', 200)\n\t\t\t.style('border', '1px solid black');\n\n\t\t// Generator\n\t\tconst lineGenerator = d3Shape.line<any>()\n\t\t\t.x((d) => d.x)\n\t\t\t.y((d) => d.y)\n\t\t\t.curve(this.interpolations.find((intplt) => intplt.name === this.interpolationSelected).value);\n\n\t\t// Provide the data to the path container\n\t\tsvgContainer.append('path')\n\t\t\t.attr('d', lineGenerator(lineData))\n\t\t\t.attr('stroke', 'green')\n\t\t\t.attr('stroke-width', 2)\n\t\t\t.attr('fill', 'yellow');\n\n\t\t// Add the name of the interpolation to the svg as a text element\n\t\tsvgContainer.append('text')\n\t\t\t.attr('x', 20)\n\t\t\t.attr('y', parseInt(svgContainer.attr('height'), 10) - 20)\n\t\t\t.text(this.interpolationSelected);\n\t}\n}\n"],"sourceRoot":""}